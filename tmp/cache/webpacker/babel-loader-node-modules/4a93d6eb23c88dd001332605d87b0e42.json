{"ast":null,"code":"import consumer from \"./consumer\";\nvar ChatChannel = consumer.subscriptions.create(\"RoomChannel\", {\n  connected: function connected() {// Called when the subscription is ready for use on the server\n  },\n  disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n  },\n  received: function received(data) {// Called when there's incoming data on the websocket for this channel\n  },\n  speak: function speak(message) {\n    return this.perform('speak', {\n      message: message\n    });\n  }\n});","map":{"version":3,"sources":["/home/ubuntu/environment/secret_base/app/javascript/channels/room_channel.js"],"names":["consumer","ChatChannel","subscriptions","create","connected","disconnected","received","data","speak","message","perform"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEA,IAAMC,WAAW,GAAGD,QAAQ,CAACE,aAAT,CAAuBC,MAAvB,CAA8B,aAA9B,EAA6C;AAC/DC,EAAAA,SAD+D,uBACnD,CACV;AACD,GAH8D;AAK/DC,EAAAA,YAL+D,0BAKhD,CACb;AACD,GAP8D;AAS/DC,EAAAA,QAT+D,oBAStDC,IATsD,EAShD,CACb;AACD,GAX8D;AAa/DC,EAAAA,KAAK,EAAE,eAASC,OAAT,EAAkB;AACvB,WAAO,KAAKC,OAAL,CAAa,OAAb,EAAsB;AAACD,MAAAA,OAAO,EAAEA;AAAV,KAAtB,CAAP;AACD;AAf8D,CAA7C,CAApB","sourcesContent":["import consumer from \"./consumer\"\n\nconst ChatChannel = consumer.subscriptions.create(\"RoomChannel\", {\n  connected() {\n    // Called when the subscription is ready for use on the server\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n\n  received(data) {\n    // Called when there's incoming data on the websocket for this channel\n  },\n\n  speak: function(message) {\n    return this.perform('speak', {message: message});\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}