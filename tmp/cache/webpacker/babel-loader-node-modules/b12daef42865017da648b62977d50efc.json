{"ast":null,"code":"function _readOnlyError(name) { throw new Error(\"\\\"\" + name + \"\\\" is read-only\"); }\n\nimport consumer from \"./consumer\";\nvar chatChannel = consumer.subscriptions.create(\"RoomChannel\", {\n  connected: function connected() {// Called when the subscription is ready for use on the server\n  },\n  disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n  },\n  received: function received(data) {// Called when there's incoming data on the websocket for this channel\n  },\n  speak: function speak(message) {\n    return this.perform('speak', {\n      message: message\n    });\n  }\n});\ndocument.addEventListener('DOMContentLoaded', function () {\n  $('#message_form').on('submit', '#message_field', function () {\n    var value = $('#message_field').val();\n    console.log(value);\n    console.log('こんにちは');\n    chatChannel.speak(value);\n    value = (_readOnlyError(\"value\"), '');\n  });\n});","map":{"version":3,"sources":["/home/ubuntu/environment/secret_base/app/javascript/channels/room_channel.js"],"names":["consumer","chatChannel","subscriptions","create","connected","disconnected","received","data","speak","message","perform","document","addEventListener","$","on","value","val","console","log"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEA,IAAMC,WAAW,GAAGD,QAAQ,CAACE,aAAT,CAAuBC,MAAvB,CAA8B,aAA9B,EAA6C;AAC/DC,EAAAA,SAD+D,uBACnD,CACV;AACD,GAH8D;AAK/DC,EAAAA,YAL+D,0BAKhD,CACb;AACD,GAP8D;AAS/DC,EAAAA,QAT+D,oBAStDC,IATsD,EAShD,CACb;AACD,GAX8D;AAa/DC,EAAAA,KAAK,EAAE,eAASC,OAAT,EAAkB;AACvB,WAAO,KAAKC,OAAL,CAAa,OAAb,EAAsB;AAACD,MAAAA,OAAO,EAAEA;AAAV,KAAtB,CAAP;AACD;AAf8D,CAA7C,CAApB;AAkBAE,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAU;AACtDC,EAAAA,CAAC,CAAC,eAAD,CAAD,CAAmBC,EAAnB,CAAsB,QAAtB,EAAgC,gBAAhC,EAAkD,YAAU;AAC1D,QAAMC,KAAK,GAAGF,CAAC,CAAC,gBAAD,CAAD,CAAoBG,GAApB,EAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAjB,IAAAA,WAAW,CAACO,KAAZ,CAAkBO,KAAlB;AACAA,IAAAA,KAAK,6BAAG,EAAH,CAAL;AACD,GAND;AAOD,CARD","sourcesContent":["import consumer from \"./consumer\"\n\nconst chatChannel = consumer.subscriptions.create(\"RoomChannel\", {\n  connected() {\n    // Called when the subscription is ready for use on the server\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n\n  received(data) {\n    // Called when there's incoming data on the websocket for this channel\n  },\n\n  speak: function(message) {\n    return this.perform('speak', {message: message});\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', function(){\n  $('#message_form').on('submit', '#message_field', function(){\n    const value = $('#message_field').val();\n    console.log(value);\n    console.log('こんにちは');\n    chatChannel.speak(value);\n    value = '';\n  });\n});"]},"metadata":{},"sourceType":"module"}