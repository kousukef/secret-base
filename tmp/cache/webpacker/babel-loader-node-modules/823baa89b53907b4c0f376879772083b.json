{"ast":null,"code":"import consumer from \"./consumer\";\n$(function () {\n  var chatChannel = consumer.subscriptions.create({\n    channel: \"ProductChannel\",\n    product_id: $('#messages').attr('data-product_id')\n  }, {\n    connected: function connected() {\n      // Called when the subscription is ready for use on the server\n      console.log($('#messages').data('product_id'));\n    },\n    disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n    },\n    received: function received(data) {\n      // Called when there's incoming data on the websocket for this channel\n      var li = $('<li>').text(data['message']);\n      li.appendTo('#messages');\n    },\n    speak: function speak(message) {\n      return this.perform('speak', {\n        message: message\n      });\n    }\n  });\n  $(document).on('click', '#message_button', function () {\n    var value = $('#message_field').val();\n    chatChannel.speak(value);\n    document.getElementById('message_field').value = '';\n    $('#message_field').focus();\n  });\n});","map":{"version":3,"sources":["/home/ubuntu/environment/secret_base/app/javascript/channels/product_channel.js"],"names":["consumer","$","chatChannel","subscriptions","create","channel","product_id","attr","connected","console","log","data","disconnected","received","li","text","appendTo","speak","message","perform","document","on","value","val","getElementById","focus"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEAC,CAAC,CAAC,YAAW;AACb,MAAMC,WAAW,GAAGF,QAAQ,CAACG,aAAT,CAAuBC,MAAvB,CAA8B;AAC9CC,IAAAA,OAAO,EAAE,gBADqC;AAE9CC,IAAAA,UAAU,EAAEL,CAAC,CAAC,WAAD,CAAD,CAAeM,IAAf,CAAoB,iBAApB;AAFkC,GAA9B,EAGf;AACHC,IAAAA,SADG,uBACS;AACV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,CAAC,CAAC,WAAD,CAAD,CAAeU,IAAf,CAAoB,YAApB,CAAZ;AACD,KAJE;AAMHC,IAAAA,YANG,0BAMY,CACb;AACD,KARE;AAUHC,IAAAA,QAVG,oBAUMF,IAVN,EAUY;AACb;AACA,UAAIG,EAAE,GAAGb,CAAC,CAAC,MAAD,CAAD,CAAUc,IAAV,CAAeJ,IAAI,CAAC,SAAD,CAAnB,CAAT;AACAG,MAAAA,EAAE,CAACE,QAAH,CAAY,WAAZ;AACD,KAdE;AAgBHC,IAAAA,KAAK,EAAE,eAASC,OAAT,EAAkB;AACvB,aAAO,KAAKC,OAAL,CAAa,OAAb,EAAsB;AAACD,QAAAA,OAAO,EAAEA;AAAV,OAAtB,CAAP;AACD;AAlBE,GAHe,CAApB;AAwBEjB,EAAAA,CAAC,CAACmB,QAAD,CAAD,CAAYC,EAAZ,CAAe,OAAf,EAAwB,iBAAxB,EAA2C,YAAU;AACnD,QAAMC,KAAK,GAAGrB,CAAC,CAAC,gBAAD,CAAD,CAAoBsB,GAApB,EAAd;AACArB,IAAAA,WAAW,CAACe,KAAZ,CAAkBK,KAAlB;AACAF,IAAAA,QAAQ,CAACI,cAAT,CAAwB,eAAxB,EAAyCF,KAAzC,GAAiD,EAAjD;AACArB,IAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBwB,KAApB;AACD,GALD;AAMD,CA/BA,CAAD","sourcesContent":["import consumer from \"./consumer\";\n\n$(function() {\nconst chatChannel = consumer.subscriptions.create({\n    channel: \"ProductChannel\",\n    product_id: $('#messages').attr('data-product_id')\n  }, {\n  connected() {\n    // Called when the subscription is ready for use on the server\n    console.log($('#messages').data('product_id'));\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n\n  received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    var li = $('<li>').text(data['message']);\n    li.appendTo('#messages');\n  },\n\n  speak: function(message) {\n    return this.perform('speak', {message: message});\n  }\n});\n\n  $(document).on('click', '#message_button', function(){\n    const value = $('#message_field').val();\n    chatChannel.speak(value);\n    document.getElementById('message_field').value = '';\n    $('#message_field').focus();\n  });\n});"]},"metadata":{},"sourceType":"module"}