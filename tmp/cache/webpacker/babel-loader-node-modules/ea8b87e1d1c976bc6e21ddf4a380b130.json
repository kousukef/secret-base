{"ast":null,"code":"import consumer from \"./consumer\";\nvar chatChannel = consumer.subscriptions.create({\n  channel: \"ProductChannel\",\n  product_id: 1\n}, {\n  connected: function connected() {\n    console.log(params['product_id']); // Called when the subscription is ready for use on the server\n  },\n  disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n  },\n  received: function received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    var li = $('<li>').text(data['message']);\n    li.appendTo('#messages');\n  },\n  speak: function speak(message) {\n    return this.perform('speak', {\n      message: message\n    });\n  }\n});\ndocument.addEventListener('DOMContentLoaded', function () {\n  $(document).on('click', '#message_button', function () {\n    var value = $('#message_field').val();\n    chatChannel.speak(value);\n    document.getElementById('message_field').value = '';\n    $('#message_field').focus();\n  });\n});","map":{"version":3,"sources":["/home/ubuntu/environment/secret_base/app/javascript/channels/product_channel.js"],"names":["consumer","chatChannel","subscriptions","create","channel","product_id","connected","console","log","params","disconnected","received","data","li","$","text","appendTo","speak","message","perform","document","addEventListener","on","value","val","getElementById","focus"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEA,IAAMC,WAAW,GAAGD,QAAQ,CAACE,aAAT,CAAuBC,MAAvB,CAA8B;AAC9CC,EAAAA,OAAO,EAAE,gBADqC;AAE9CC,EAAAA,UAAU,EAAE;AAFkC,CAA9B,EAGf;AACHC,EAAAA,SADG,uBACS;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAAC,YAAD,CAAlB,EADU,CAEV;AACD,GAJE;AAMHC,EAAAA,YANG,0BAMY,CACb;AACD,GARE;AAUHC,EAAAA,QAVG,oBAUMC,IAVN,EAUY;AACb;AACA,QAAIC,EAAE,GAAGC,CAAC,CAAC,MAAD,CAAD,CAAUC,IAAV,CAAeH,IAAI,CAAC,SAAD,CAAnB,CAAT;AACAC,IAAAA,EAAE,CAACG,QAAH,CAAY,WAAZ;AACD,GAdE;AAgBHC,EAAAA,KAAK,EAAE,eAASC,OAAT,EAAkB;AACvB,WAAO,KAAKC,OAAL,CAAa,OAAb,EAAsB;AAACD,MAAAA,OAAO,EAAEA;AAAV,KAAtB,CAAP;AACD;AAlBE,CAHe,CAApB;AAwBAE,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAU;AACtDP,EAAAA,CAAC,CAACM,QAAD,CAAD,CAAYE,EAAZ,CAAe,OAAf,EAAwB,iBAAxB,EAA2C,YAAU;AACnD,QAAMC,KAAK,GAAGT,CAAC,CAAC,gBAAD,CAAD,CAAoBU,GAApB,EAAd;AACAvB,IAAAA,WAAW,CAACgB,KAAZ,CAAkBM,KAAlB;AACAH,IAAAA,QAAQ,CAACK,cAAT,CAAwB,eAAxB,EAAyCF,KAAzC,GAAiD,EAAjD;AACAT,IAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBY,KAApB;AACD,GALD;AAMD,CAPD","sourcesContent":["import consumer from \"./consumer\"\n\nconst chatChannel = consumer.subscriptions.create({\n    channel: \"ProductChannel\",\n    product_id: 1\n  }, {\n  connected() {\n    console.log(params['product_id']);\n    // Called when the subscription is ready for use on the server\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n\n  received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    var li = $('<li>').text(data['message']);\n    li.appendTo('#messages');\n  },\n\n  speak: function(message) {\n    return this.perform('speak', {message: message});\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', function(){\n  $(document).on('click', '#message_button', function(){\n    const value = $('#message_field').val();\n    chatChannel.speak(value);\n    document.getElementById('message_field').value = '';\n    $('#message_field').focus();\n  });\n});"]},"metadata":{},"sourceType":"module"}