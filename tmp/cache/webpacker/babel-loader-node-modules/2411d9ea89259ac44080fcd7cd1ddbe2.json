{"ast":null,"code":"import consumer from \"./consumer\";\nvar chatChannel = document.addEventListener('DOMContentLoaded', function () {\n  consumer.subscriptions.create({\n    channel: \"ProductChannel\",\n    product_id: $('#message').data('product_id')\n  }, {\n    connected: function connected() {\n      console.log(params); // Called when the subscription is ready for use on the server\n    },\n    disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n    },\n    received: function received(data) {\n      // Called when there's incoming data on the websocket for this channel\n      var li = $('<li>').text(data['message']);\n      li.appendTo('#messages');\n    },\n    speak: function speak(message) {\n      return this.perform('speak', {\n        message: message\n      });\n    }\n  });\n  document.addEventListener('DOMContentLoaded', function () {\n    $(document).on('click', '#message_button', function () {\n      var value = $('#message_field').val();\n      chatChannel.speak(value);\n      document.getElementById('message_field').value = '';\n      $('#message_field').focus();\n    });\n  });\n});","map":{"version":3,"sources":["/home/ubuntu/environment/secret_base/app/javascript/channels/product_channel.js"],"names":["consumer","chatChannel","document","addEventListener","subscriptions","create","channel","product_id","$","data","connected","console","log","params","disconnected","received","li","text","appendTo","speak","message","perform","on","value","val","getElementById","focus"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEA,IAAMC,WAAW,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAU;AAC1EH,EAAAA,QAAQ,CAACI,aAAT,CAAuBC,MAAvB,CAA8B;AAC5BC,IAAAA,OAAO,EAAE,gBADmB;AAE5BC,IAAAA,UAAU,EAAEC,CAAC,CAAC,UAAD,CAAD,CAAcC,IAAd,CAAmB,YAAnB;AAFgB,GAA9B,EAGG;AACHC,IAAAA,SADG,uBACS;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EADU,CAEV;AACD,KAJE;AAMHC,IAAAA,YANG,0BAMY,CACb;AACD,KARE;AAUHC,IAAAA,QAVG,oBAUMN,IAVN,EAUY;AACb;AACA,UAAIO,EAAE,GAAGR,CAAC,CAAC,MAAD,CAAD,CAAUS,IAAV,CAAeR,IAAI,CAAC,SAAD,CAAnB,CAAT;AACAO,MAAAA,EAAE,CAACE,QAAH,CAAY,WAAZ;AACD,KAdE;AAgBHC,IAAAA,KAAK,EAAE,eAASC,OAAT,EAAkB;AACvB,aAAO,KAAKC,OAAL,CAAa,OAAb,EAAsB;AAACD,QAAAA,OAAO,EAAEA;AAAV,OAAtB,CAAP;AACD;AAlBE,GAHH;AAwBFlB,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAU;AACtDK,IAAAA,CAAC,CAACN,QAAD,CAAD,CAAYoB,EAAZ,CAAe,OAAf,EAAwB,iBAAxB,EAA2C,YAAU;AACnD,UAAMC,KAAK,GAAGf,CAAC,CAAC,gBAAD,CAAD,CAAoBgB,GAApB,EAAd;AACAvB,MAAAA,WAAW,CAACkB,KAAZ,CAAkBI,KAAlB;AACArB,MAAAA,QAAQ,CAACuB,cAAT,CAAwB,eAAxB,EAAyCF,KAAzC,GAAiD,EAAjD;AACAf,MAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBkB,KAApB;AACD,KALD;AAMD,GAPD;AAQC,CAjCmB,CAApB","sourcesContent":["import consumer from \"./consumer\";\n\nconst chatChannel = document.addEventListener('DOMContentLoaded', function(){\n  consumer.subscriptions.create({\n    channel: \"ProductChannel\",\n    product_id: $('#message').data('product_id')\n  }, {\n  connected() {\n    console.log(params);\n    // Called when the subscription is ready for use on the server\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n\n  received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    var li = $('<li>').text(data['message']);\n    li.appendTo('#messages');\n  },\n\n  speak: function(message) {\n    return this.perform('speak', {message: message});\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', function(){\n  $(document).on('click', '#message_button', function(){\n    const value = $('#message_field').val();\n    chatChannel.speak(value);\n    document.getElementById('message_field').value = '';\n    $('#message_field').focus();\n  });\n});\n})"]},"metadata":{},"sourceType":"module"}