{"ast":null,"code":"import consumer from \"./consumer\";\nvar chatChannel = consumer.subscriptions.create(\"RoomChannel\", {\n  connected: function connected() {// Called when the subscription is ready for use on the server\n  },\n  disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n  },\n  received: function received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    var li = $('<li>').text(data['message']);\n    console.log(data['message']);\n    li.appendTo('#messages');\n  },\n  speak: function speak(message) {\n    return this.perform('speak', {\n      message: message\n    });\n  }\n});\ndocument.addEventListener('DOMContentLoaded', function () {\n  $(document).on('click', '#message_button', function () {\n    var value = $('#message_field').val();\n    chatChannel.speak(value);\n    $('#message_field').value = '';\n    $('#message_field').focus();\n  });\n});","map":{"version":3,"sources":["/home/ubuntu/environment/secret_base/app/javascript/channels/room_channel.js"],"names":["consumer","chatChannel","subscriptions","create","connected","disconnected","received","data","li","$","text","console","log","appendTo","speak","message","perform","document","addEventListener","on","value","val","focus"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEA,IAAMC,WAAW,GAAGD,QAAQ,CAACE,aAAT,CAAuBC,MAAvB,CAA8B,aAA9B,EAA6C;AAC/DC,EAAAA,SAD+D,uBACnD,CACV;AACD,GAH8D;AAK/DC,EAAAA,YAL+D,0BAKhD,CACb;AACD,GAP8D;AAS/DC,EAAAA,QAT+D,oBAStDC,IATsD,EAShD;AACb;AACA,QAAIC,EAAE,GAAGC,CAAC,CAAC,MAAD,CAAD,CAAUC,IAAV,CAAeH,IAAI,CAAC,SAAD,CAAnB,CAAT;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAAC,SAAD,CAAhB;AACAC,IAAAA,EAAE,CAACK,QAAH,CAAY,WAAZ;AACD,GAd8D;AAgB/DC,EAAAA,KAAK,EAAE,eAASC,OAAT,EAAkB;AACvB,WAAO,KAAKC,OAAL,CAAa,OAAb,EAAsB;AAACD,MAAAA,OAAO,EAAEA;AAAV,KAAtB,CAAP;AACD;AAlB8D,CAA7C,CAApB;AAqBAE,QAAQ,CAACC,gBAAT,CAA0B,kBAA1B,EAA8C,YAAU;AACtDT,EAAAA,CAAC,CAACQ,QAAD,CAAD,CAAYE,EAAZ,CAAe,OAAf,EAAwB,iBAAxB,EAA2C,YAAU;AACnD,QAAMC,KAAK,GAAGX,CAAC,CAAC,gBAAD,CAAD,CAAoBY,GAApB,EAAd;AACApB,IAAAA,WAAW,CAACa,KAAZ,CAAkBM,KAAlB;AACAX,IAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBW,KAApB,GAA4B,EAA5B;AACAX,IAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBa,KAApB;AACD,GALD;AAMD,CAPD","sourcesContent":["import consumer from \"./consumer\"\n\nconst chatChannel = consumer.subscriptions.create(\"RoomChannel\", {\n  connected() {\n    // Called when the subscription is ready for use on the server\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n\n  received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    var li = $('<li>').text(data['message']);\n    console.log(data['message']);\n    li.appendTo('#messages');\n  },\n\n  speak: function(message) {\n    return this.perform('speak', {message: message});\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', function(){\n  $(document).on('click', '#message_button', function(){\n    const value = $('#message_field').val();\n    chatChannel.speak(value);\n    $('#message_field').value = '';\n    $('#message_field').focus();\n  });\n});"]},"metadata":{},"sourceType":"module"}