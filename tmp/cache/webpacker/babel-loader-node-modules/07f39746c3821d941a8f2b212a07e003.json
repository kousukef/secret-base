{"ast":null,"code":"import consumer from \"./consumer\";\n$(function () {\n  var chatChannel = consumer.subscriptions.create({\n    channel: \"ProductChannel\",\n    product_id: $('#messages').data('product-id')\n  }, {\n    connected: function connected() {// Called when the subscription is ready for use on the server\n    },\n    disconnected: function disconnected() {// Called when the subscription has been terminated by the server\n    },\n    received: function received(data) {\n      // Called when there's incoming data on the websocket for this channel\n      var message = '';\n      message = \"<div class=\\\"toast\\\" role=\\\"alert\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\">\\n                  <div class=\\\"toast-header\\\">\\n                    <img src=\\\"...\\\" class=\\\"rounded mr-2\\\" alt=\\\"...\\\">\\n                    <strong class=\\\"mr-auto\\\">Bootstrap</strong>\\n                    <small class=\\\"text-muted\\\">just now</small>\\n                  </div>\\n                  <div class=\\\"toast-body\\\">\\n                    \".concat(data['message'], \"\\n                  </div>\\n                </div>\");\n      $('#messages').insertAdjacentHTML('beforeend', message);\n    },\n    speak: function speak(message) {\n      return this.perform('speak', {\n        message: message\n      });\n    }\n  });\n  $(document).on('click', '#message_button', function () {\n    var value = $('#message_field').val();\n    chatChannel.speak(value);\n    document.getElementById('message_field').value = '';\n    $('#message_field').focus();\n  });\n});","map":{"version":3,"sources":["/home/ubuntu/environment/secret_base/app/javascript/channels/product_channel.js"],"names":["consumer","$","chatChannel","subscriptions","create","channel","product_id","data","connected","disconnected","received","message","insertAdjacentHTML","speak","perform","document","on","value","val","getElementById","focus"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEAC,CAAC,CAAC,YAAW;AACb,MAAMC,WAAW,GAAGF,QAAQ,CAACG,aAAT,CAAuBC,MAAvB,CAA8B;AAC9CC,IAAAA,OAAO,EAAE,gBADqC;AAE9CC,IAAAA,UAAU,EAAEL,CAAC,CAAC,WAAD,CAAD,CAAeM,IAAf,CAAoB,YAApB;AAFkC,GAA9B,EAGf;AACHC,IAAAA,SADG,uBACS,CACV;AACD,KAHE;AAKHC,IAAAA,YALG,0BAKY,CACb;AACD,KAPE;AASHC,IAAAA,QATG,oBASMH,IATN,EASY;AACb;AACA,UAAII,OAAO,GAAG,EAAd;AACCA,MAAAA,OAAO,0bAOUJ,IAAI,CAAC,SAAD,CAPd,uDAAP;AAUDN,MAAAA,CAAC,CAAC,WAAD,CAAD,CAAeW,kBAAf,CAAkC,WAAlC,EAA+CD,OAA/C;AACD,KAvBE;AAyBHE,IAAAA,KAAK,EAAE,eAASF,OAAT,EAAkB;AACvB,aAAO,KAAKG,OAAL,CAAa,OAAb,EAAsB;AAACH,QAAAA,OAAO,EAAEA;AAAV,OAAtB,CAAP;AACD;AA3BE,GAHe,CAApB;AAiCEV,EAAAA,CAAC,CAACc,QAAD,CAAD,CAAYC,EAAZ,CAAe,OAAf,EAAwB,iBAAxB,EAA2C,YAAU;AACnD,QAAMC,KAAK,GAAGhB,CAAC,CAAC,gBAAD,CAAD,CAAoBiB,GAApB,EAAd;AACAhB,IAAAA,WAAW,CAACW,KAAZ,CAAkBI,KAAlB;AACAF,IAAAA,QAAQ,CAACI,cAAT,CAAwB,eAAxB,EAAyCF,KAAzC,GAAiD,EAAjD;AACAhB,IAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBmB,KAApB;AACD,GALD;AAMD,CAxCA,CAAD","sourcesContent":["import consumer from \"./consumer\"\n\n$(function() {\nconst chatChannel = consumer.subscriptions.create({\n    channel: \"ProductChannel\",\n    product_id: $('#messages').data('product-id')\n  }, {\n  connected() {\n    // Called when the subscription is ready for use on the server\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n  },\n\n  received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    var message = '';\n     message = `<div class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n                  <div class=\"toast-header\">\n                    <img src=\"...\" class=\"rounded mr-2\" alt=\"...\">\n                    <strong class=\"mr-auto\">Bootstrap</strong>\n                    <small class=\"text-muted\">just now</small>\n                  </div>\n                  <div class=\"toast-body\">\n                    ${data['message']}\n                  </div>\n                </div>`;\n    $('#messages').insertAdjacentHTML('beforeend', message);\n  },\n\n  speak: function(message) {\n    return this.perform('speak', {message: message});\n  }\n});\n\n  $(document).on('click', '#message_button', function(){\n    const value = $('#message_field').val();\n    chatChannel.speak(value);\n    document.getElementById('message_field').value = '';\n    $('#message_field').focus();\n  });\n});"]},"metadata":{},"sourceType":"module"}